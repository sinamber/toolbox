<template>
    <div class="common-layout">
        <el-container>
          <el-header>
            <el-row>
              <el-col :span="12"><img src="/logo.png" style="height: 32px;" class="mt-12 pl-12"/></el-col>
              <el-col :span="12" class="text-right"><a href="http://www.baidu.com" target="_blank"><img src="/github.jpg" style="height: 32px;" class="mt-12 pl-12"/></a></el-col>
            </el-row>
          </el-header>
          <el-main>
                <el-card class="box-card">
                    <div style="padding: 0;background: #141414;">
                        <v-ace-editor
                                @paste="onPaste"
                                v-model:value="content.data"
                                lang="json"
                                theme="twilight"
                                :options="{
                                    enableBasicAutocompletion: true,
                                    enableSnippets: true,
                                    enableLiveAutocompletion: true,
                                    fontSize: 14,
                                    tabSize: 2,
                                    showPrintMargin: false,
                                    highlightActiveLine: true,
                                }"
                                style="height: 880px" />
                    </div>
                    <div class="pl-12 text-error">{{msg.data}}</div>
                    <div class="mt-12 text-right pr-12">
                        <div v-if="content.data !== ''">
                          <el-button @click="jsonFormat" type="success" size="large" :icon="Expand">FormatJSON</el-button>
                          <el-button @click="jsonCompress" type="success" size="large" :icon="Fold">CompressJSON</el-button>
                          <el-button @click="copy" type="success" size="large" :icon="Fold">Copy</el-button>
                          <el-button @click="clear" type="danger" size="large" :icon="Delete">Clear</el-button>
                        </div>
                        <div v-else>
                          <el-button  type="success" size="large" :icon="Expand" disabled>FormatJSON</el-button>
                          <el-button  type="success" size="large" :icon="Fold" disabled>CompressJSON</el-button>
                          <el-button  type="success" size="large" :icon="Fold" disabled>Copy</el-button>
                          <el-button  type="danger" size="large" :icon="Delete" disabled>Clear</el-button>
                        </div>
                    </div>
                </el-card>
            </el-main>
            <el-footer class="text-white">
                <img src="/footer.png" alt="logo" style="height:48px;"/>
                <span class="pl-12">0.1.0 ∞</span>
            </el-footer>
        </el-container>
    </div>
</template>
<script lang="ts" setup>
    import { reactive, ref } from 'vue'
    import { invoke } from "@tauri-apps/api/tauri";
    import { VAceEditor } from 'vue3-ace-editor';
    import 'ace-builds/src-noconflict/mode-json';
    import 'ace-builds/src-noconflict/theme-twilight';
    import { Delete, Expand, Fold} from '@element-plus/icons-vue'
    import {ElMessage} from "element-plus";

    document.addEventListener('DOMContentLoaded', () => {
        invoke('close_splashscreen')
    })

    const content = reactive({
        data: ''
    });

    const msg = reactive({
        data: ''
    });

    const onPaste = (e,ace) => {
    }

    const jsonError = (e) => {
        msg.data = `${e.message}`;
        console.log(`JSON FORMAT ERROR：${e.message}`);
    }

    const jsonFormat = () => {
        try {
          msg.data = '';
          let obj = eval('(' + content.data + ')');
          if(isJson(obj)){
            content.data = JSON.stringify(obj, null, 2)
          }else{
            content.data = JSON.stringify(JSON.parse(obj), null, 2)
          }
        } catch (e) {
            jsonError(e)
        }
    };

    const jsonCompress = () => {
        try {
            msg.data = '';
            content.data = JSON.stringify(JSON.parse(content.data))
        } catch (e) {
            jsonError(e)
        }
    }

    const clear = () => {
      msg.data = '';
      content.data = ''
    }


    const copy = () => {
      navigator.clipboard.writeText(content.data);
      ElMessage({
        message: 'content has been copied to clipboard',
        type: 'success',
      })
    }

    const isJson = (obj) =>{
       return typeof(obj) == "object" && Object.prototype.toString.call(obj).toLowerCase() == "[object object]" && !obj.length;
    }
</script>
<style>
body{
    margin: 0;
    padding: 0;
    background-color: #202020;
}
.text-white {
    color: #ffffff;
}
.text-success{
    color: #198754;
}
.text-error{
    color:firebrick
}
.pl-12{
    padding-left:12px;
}
.pr-12{
    padding-right:12px;
}
.mt-12{
    margin-top:12px;
}
.text-right {
    text-align: right;
}


.el-main{
    margin: 0;
    padding: 0;
    --el-main-padding: 0;
}

.el-card {
    --el-card-padding: 0;
    --el-card-bg-color: #202020;
    border:1px solid #202020;
}

.el-card__header {
    border-bottom: 1px solid #202020;
    box-sizing: border-box;
}
</style>
